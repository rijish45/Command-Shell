
Hello, and welcome to my Command-Shell. In this project, I have implemented all the required features till step 3 of the project desciption.
In the future, I plan to add piping and re-direction features to this command shell.

In this document, I'm listing the output of the test cases one by one and justifying the behaviour of my command shell.

Step 1: Read a command name and, run it
-------------------------------------------------------



Case 1: Run ./myShell < testcases/test01.txt 
File Content: /bin/ls
Program Behaviour:
myShell:/Users/rijishganguly/Desktop/Project $ README.md		myShelltestcases
TESTING.txt		myShell.cpp
commandShell.txt	myShell.h
Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Project $ 

The program behaviour is justified as test01.txt had the command /bin/ls. It prints the content of the current directory
and then exits. After the first program exits, we get another shell prompt for our next command. As the next command in the text file is EOF,
the program exits.


Case 2: Run ./myShell < testcases/test02.txt 
File Content: /bin/ls -alh
Program Behaviour:
myShell:/Users/rijishganguly/Desktop/Project $ total 488
drwxr-xr-x  11 rijishganguly  staff   352B Dec  7 23:08 .
drwx------+  5 rijishganguly  staff   160B Dec  5 19:02 ..
-rw-r--r--@  1 rijishganguly  staff   6.0K Dec  6 21:01 .DS_Store
drwxr-xr-x  12 rijishganguly  staff   384B Dec  7 19:37 .git
-rw-r--r--   1 rijishganguly  staff   2.4K Dec  7 19:36 README.md
-rw-r--r--@  1 rijishganguly  staff   991B Dec  7 23:14 TESTING.txt
-rw-r--r--   1 rijishganguly  staff   6.9K Dec  6 15:46 commandShell.txt
-rwxr-xr-x   1 rijishganguly  staff   199K Dec  7 23:06 myShell
-rw-r--r--   1 rijishganguly  staff    14K Dec  7 20:40 myShell.cpp
-rw-r--r--   1 rijishganguly  staff   1.3K Dec  7 19:08 myShell.h
drwxr-xr-x   4 rijishganguly  staff   128B Dec  7 23:15 testcases
Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Project $ 

The program behaviour is justified as the commamd in the text file was /bin/ls -alh. Here the ls program takes the parameters
-alh which lists out all the direcory entries, evaluates the file information and prints them in a human readable manner. After the first program exits, we get another shell prompt for our next command. As the next command in the text file is EOF, the program exits.


Case 3: Run ./myShell < testcases/test03.txt 
File Content: /bin/ls -a -l -h
Program behaviour: 
myShell:/Users/rijishganguly/Desktop/Project $ total 488
drwxr-xr-x  11 rijishganguly  staff   352B Dec  7 23:08 .
drwx------+  5 rijishganguly  staff   160B Dec  5 19:02 ..
-rw-r--r--@  1 rijishganguly  staff   6.0K Dec  6 21:01 .DS_Store
drwxr-xr-x  12 rijishganguly  staff   384B Dec  7 19:37 .git
-rw-r--r--   1 rijishganguly  staff   2.4K Dec  7 19:36 README.md
-rw-r--r--@  1 rijishganguly  staff   2.2K Dec  7 23:24 TESTING.txt
-rw-r--r--   1 rijishganguly  staff   6.9K Dec  6 15:46 commandShell.txt
-rwxr-xr-x   1 rijishganguly  staff   199K Dec  7 23:06 myShell
-rw-r--r--   1 rijishganguly  staff    14K Dec  7 20:40 myShell.cpp
-rw-r--r--   1 rijishganguly  staff   1.3K Dec  7 19:08 myShell.h
drwxr-xr-x   5 rijishganguly  staff   160B Dec  7 23:25 testcases
Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Project $ 

Here the program takes the same command as before but the parameters are separated by white spaces. The command in the file was /bin/ls -a -l -h.
After the first program exits, we get another shell prompt for our next command. As the next command in the text file is EOF, the program exits.


Case 4: Run ./myShell < testcases/test04.txt
File Content: 		/bin/ls		-a
Program behaviour: 
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ .		makefile	myShell.cpp
..		myShell		myShell.h
Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 

Here we learn that the program is capable of handling trailing and beginning whitespaces

Case 5: Run ./myShell < testcases/test05.txt
File Content: ls -$##
Program Behaviour:
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ /bin/ls: illegal option -- $
usage: ls [-ABCFGHLOPRSTUWabcdefghiklmnopqrstuwx1] [file ...]
Program exited with status 1
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 

Here the ls command takes an illegal parameter. We observe that erro message is displayed. The program exits with status 1 which suggests that the program is working correctly.


Case 6: Run ./myShell < testcases/test06.txt
File Content: whoami
Program behaviour:
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ rijishganguly
Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 


Case 7: Run ./myShell < testcases/test07.txt
File Content: jssjjdjj
Program Behaviour:
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ Command jssjjdjj not found
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 

Here the program takes an illegal command which is not defined anywhere. We observe that an error message is shown saying Command jssjjdjj not found. This is according to the requirements of the project

Case 8: Run ./myShell < testcases/test08.txt
File Content: mkdir hello
Program Behaviour:
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 
We can observe that all non-built-in valid commands are functioning
properly

Case 9: Run ./myShell < testcases/test09.txt
File Content: echo Hello World
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ Hello World
Program exited with status 0
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 
echo works properly and print the message. The exit is a success.

Case 10: Run ./myShell < testcases/test10.txt
File Content: exit
Program behaviour:
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ Program exited with status 0
The exit command is functioning properly as the program quits successfully


Case 11: Run ./myShell < testcases/test11.txt
File Content: cd ../
Program Behaviour: myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ myShell:/Users/rijishganguly/Desktop/Mini-Project $ 
We can observe that using the cd command we have moved to the parent directory

Case 12: Run ./myShell < testcases/test12.txt
File content: cd jsjsjks
Program Behaviour:
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ -bash: cd: No such file or directory
myShell:/Users/rijishganguly/Desktop/Mini-Project/Project $ 
Here we tried to change to a non-existent directory. We observe that an error message has been displayed.






